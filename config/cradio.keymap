/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

&sk {
    ignore-modifiers;
};

/ { 

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };
        
            combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };
        
                    combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };
        
                           combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };
        
        
           combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
        

        
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
        &kp QUOT &kp COMMA &kp DOT &kp R &kp T     &kp F &kp G &kp C &kp R &kp L 
        &kp A    &kp O     &kp E   &kp U &kp I     &kp D &kp H &kp T &kp N &kp S
        &kp Z    &kp Q     &kp J   &kp K &kp X     &kp B &kp M &kp W &kp V &kp Z
                                &mo 1 &kp LCTL     &kp SPC &mo 2 
		>;
		};

       		left_layer {
		bindings = <
        &kp C(TAB) &kp C(S(TAB)) &kp LA(TAB) &kp LS(LA(TAB)) &kp K_VOLUME_UP      &kp CAPS  &kp HOME  &kp UP   &kp END   &kp DEL
        &sk LGUI   &sk LSHIFT    &sk LCTRL   &sk LALT        &kp TAB 			  &kp ESC   &kp LEFT  &kp DOWN &kp RIGHT &kp BSPC
        &kp LC(Z)  &kp LC(X)     &kp LC(C)   &kp TAB         &kp K_VOLUME_DOWN    &none     &kp PG_UP &kp PG_DN &none  &kp LC(S) 
					                                           &mo 1  &kp LGUI    &kp RGUI &mo 2 
		>;
		};
		
		right_layer {
		bindings = <
        &kp GRAVE &kp LBKT &kp LPAR  &kp LBRC  &kp TILDE   &kp CARET &kp RBRC &kp RPAR   &kp RBKT   &kp GRAVE
        &kp MINUS &kp STAR &kp EQUAL &kp UNDER &kp DLLR    &kp HASH  &sk RALT &sk RCTRL  &sk RSHIFT &sk RGUI
        &kp PLUS  &kp PIPE &kp AT    &kp BSLH  &kp PRCNT   &kp AMPS  &kp FSLH  &kp QMARK &kp COLON  &kp EXCL 
                                         &mo 3 &kp LCTL    &kp SPC  &mo 2
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp NUM_1  &kp NUM_2    &kp NUM_3    &kp NUM_4    &kp NUM_5 			&trans &trans   &trans   &trans  &trans
		&kp F1 &kp F2 &kp F3 &kp F4 &kp F5  						&trans &kp PG_UP  &kp K_VOL_UP &kp K_MUTE &trans 
		&bt BT_CLR  &bt BT_NXT &bt BT_PRV &kp F6 &kp F7   				&trans &kp PG_DN  &kp K_VOL_DN  &trans &trans   
					 &trans &trans  					&trans &trans 
		>;
		};	
        
	};
};
