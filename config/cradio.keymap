#include "layers.dtsi"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define VL_UP C_VOL_UP
#define VL_DN C_VOL_DN

#define WN_BK LS(TAB)

#define TAB_FWD LC(TAB)
#define TAB_BK LC(LS(TAB))

#define WN_SNIP LG(LS(S))

#define SL_UP C_AC_SCROLL_UP
#define SL_DN C_AC_SCROLL_DOWN

#define B0 BT_SEL 0
#define B1 BT_SEL 1
#define B2 BT_SEL 2
#define B3 BT_SEL 3
#define B4 BT_SEL 4
#define B5 BT_SEL 5

&sk {
    ignore-modifiers;
};

&mt {
    tapping-term-ms = <50>;
};

/ {

    behaviors {
        TD_LDR: tap_dance_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BOOTLOADER";
            #binding-cells = <0>;
            bindings = <&none>, <&none>, <&bootloader>;
        };

        TD_CPY_CT: tap_dance_copy_cut {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_COPY_CUT";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>, <&kp LC(X)>;
        };

        TS_WN_FWD: tri_state_swap_window_forward {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp LSHFT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <3 13>;
        };

        TS_WN_BK: tri_state_swap_window_backward {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <2 13>;
        };

        HT_CTRL_KP: hold_tap_control_key_press {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_CONTROL_KEY_PRESS";
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            #binding-cells = <2>;
            bindings = <&kp>, <&SL_CTRL>;
        };
    };



    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_function_layer {
            if-layers = <NAV SYM>;
            then-layer = <FNC>;
        };
    };

    combos {
        #include "combos.dtsi"
    };

    macros {
        SL_CTRL: macro_sleep_control {
            label = "Slow tap control macro";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            tap-ms = <150>;
            bindings = <&kp LCTRL>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
        bindings = <
            &kp QUOT &kp COMMA &kp DOT &kp P &kp Y   &kp F &kp G &kp C &kp R &kp L
            &kp A    &kp O     &kp E   &kp U &kp I   &kp D &kp H &kp T &kp N &kp S
            &kp SEMI &kp Q     &kp J   &kp K &kp X   &kp B &kp M &kp W &kp V &kp Z
                                 &mo NAV &kp LSHFT   &kp SPC &mo SYM
        >;
        };

        #include "alternate_alpha_layers.dtsi"

        navigation_layer {
        bindings = <
            &kp TAB_BK &kp TAB_FWD &TS_WN_FWD &TS_WN_BK &kp VL_UP   &kp CAPS  &kp HOME  &kp UP    &kp END   &kp DEL
            &sk LGUI   &sk LALT    &sk LCTRL  &sk LSHFT &kp TAB     &kp ESC   &kp LEFT  &kp DOWN  &kp RIGHT &kp BSPC
            &kp LC(Z)  &kp LC(Y)   &TD_CPY_CT &kp LC(V) &kp VL_DN   &kp PG_UP &kp SL_UP &kp SL_DN &kp PG_DN &kp K_CANCEL
                                               &trans &kp WN_SNIP   &kp ENTER &trans
        >;
        };

        symbol_layer {
        bindings = <
            &kp GRAVE &kp LBKT &kp LPAR  &kp LBRC  &kp TILDE   &kp CARET &kp RBRC  &kp RPAR  &kp RBKT  &kp GRAVE
            &kp MINUS &kp STAR &kp EQUAL &kp UNDER &kp DLLR    &kp HASH  &sk RSHFT &sk RCTRL &sk RALT  &sk RGUI
            &kp PLUS  &kp PIPE &kp AT    &kp BSLH  &kp PRCNT   &kp AMPS  &kp FSLH  &kp QMARK &kp COLON &kp EXCL
                                             &trans &kp LCTL   &kp SPC  &trans
        >;
        };

        function_layer {
        bindings = <
            &kp F8   &kp F6   &kp F10   &kp F2    &kp F4    &kp F5  &kp F3    &kp F1    &kp F7   &kp F9
            &kp N8   &kp N6   &kp N0    &kp N2    &kp N4    &kp N5  &kp N3    &kp N1    &kp N7   &kp N9
            &kp LGUI &sk LALT &sk LCTRL &sk LSHFT &sk F12   &kp F11 &sk RSHFT &sk RCTRL &sk RALT &sk RGUI
                                           &trans &kp F13   &kp F14 &trans
        >;
        };

        keyboard_utility_layer {
        bindings = <
            &none &bt B3     &bt B4 &bt B5     &bootloader   &bootloader &bt B5     &bt B4 &bt B3     &none
            &none &bt B0     &bt B1 &bt B2     &none         &none       &bt B2     &bt B1 &bt B0     &none
            &none &bt BT_PRV &kp A  &bt BT_NXT &bt BT_CLR    &bt BT_CLR  &bt BT_NXT &kp A  &bt BT_PRV &none
                                           &to DEF &trans    &trans &to DEF
        >;
        };

        game_layer {
        bindings = <
            &kp ESC   &kp Q &kp W &kp E &kp R   &kp T &kp Y    &kp UP   &kp I     &kp O
            &kp LSHFT &kp A &kp S &kp D &kp F   &kp G &kp LEFT &kp DOWN &kp RIGHT &kp L
            &kp TAB   &kp Z &kp X &kp C &kp V   &kp B &kp N    &kp M    &kp COMMA &kp DOT
                 &HT_CTRL_KP LALT 0 &kp SPACE   &trans &to DEF
        >;
        };

    };
};
